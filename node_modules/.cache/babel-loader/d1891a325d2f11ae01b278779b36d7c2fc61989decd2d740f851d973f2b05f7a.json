{"ast":null,"code":"var _jsxFileName = \"/Users/rahulsharma/Desktop/React/webpage/src/visibility.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Visibility = () => {\n  _s();\n  var _tasks$emp$id;\n  const [showLargeBox, setShowLargeBox] = useState(false);\n  const [showStatusBox, setShowStatusBox] = useState(false);\n  const [status, setStatus] = useState('');\n  const [employees, setEmployees] = useState([1, 2, 3]);\n  const [tasks, setTasks] = useState({\n    1: ['Task 1', 'Task 2', 'Task 3'],\n    2: ['Task 1', 'Task 2', 'Task 3'],\n    3: ['Task 1', 'Task 2', 'Task 3']\n  });\n  const [showInputBox, setShowInputBox] = useState(null); // which employee is adding task\n  const [taskInput, setTaskInput] = useState(''); // task name input\n\n  const handleManagerClick = () => {\n    setShowLargeBox(prev => !prev);\n    setStatus('Not Started');\n  };\n  const handleTaskClick = (empId, taskIndex) => {\n    setSelectedTask({\n      empId,\n      taskIndex\n    });\n    setShowStatusBox(true);\n    setShowLargeBox(false);\n  };\n  const addEmployee = () => {\n    const newId = employees.length + 1;\n    setEmployees(prev => [...prev, newId]);\n    setTasks(prev => ({\n      ...prev,\n      [newId]: []\n    }));\n  };\n  const handleAddTask = employeeId => {\n    if (!taskInput.trim()) return;\n    setTasks(prev => ({\n      ...prev,\n      [employeeId]: [...prev[employeeId], taskInput.trim()]\n    }));\n    setTaskInput('');\n    setShowInputBox(null);\n  };\n  const deleteEmployee = employeeId => {\n    setEmployees(prev => prev.filter(emp => emp !== employeeId));\n    setTasks(prev => {\n      const newTasks = {\n        ...prev\n      };\n      delete newTasks[employeeId];\n      return newTasks;\n    });\n  };\n  const deleteTask = (employeeId, taskIndex) => {\n    setTasks(prev => {\n      const updatedTasks = {\n        ...prev\n      };\n      updatedTasks[employeeId] = updatedTasks[employeeId].filter((_, index) => index !== taskIndex); // Remove the specific task\n      return updatedTasks;\n    });\n  };\n  const [selectedTask, setSelectedTask] = useState(null); // { empId, taskIndex }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskbox\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleManagerClick,\n        children: \"Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskbox2\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"editbtn\",\n        onClick: addEmployee,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: showLargeBox ? '' : 'hidden',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"largebox\",\n        children: employees.map(emp => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Employee \", emp]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: (tasks[emp] || []).map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleTaskClick,\n                children: task\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteTask(emp, index),\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 18\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), showInputBox === emp ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter task name\",\n              value: taskInput,\n              onChange: e => setTaskInput(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleAddTask(emp),\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowInputBox(null),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '8px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowInputBox(emp),\n              children: \"Add New Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteEmployee(emp),\n              children: \"\\uD83D\\uDDD1\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)]\n        }, emp, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: showStatusBox ? '' : 'hidden',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"statusbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: (_tasks$emp$id = tasks[emp.id]) === null || _tasks$emp$id === void 0 ? void 0 : _tasks$emp$id.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleTaskClick(emp.id, index),\n              style: {\n                backgroundColor: task.status === 'Not Started' ? '#828282' : task.status === 'In Progress' ? 'orange' : task.status === 'Testing' ? 'yellow' : task.status === 'Done' ? 'lightgreen' : ''\n              },\n              children: task.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 7\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 5\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setShowStatusBox(false);\n            setShowLargeBox(true);\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Visibility, \"vA9kqoXAh999JaQf+bzKox5HKzU=\");\n_c = Visibility;\nexport default Visibility;\nvar _c;\n$RefreshReg$(_c, \"Visibility\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Visibility","_s","_tasks$emp$id","showLargeBox","setShowLargeBox","showStatusBox","setShowStatusBox","status","setStatus","employees","setEmployees","tasks","setTasks","showInputBox","setShowInputBox","taskInput","setTaskInput","handleManagerClick","prev","handleTaskClick","empId","taskIndex","setSelectedTask","addEmployee","newId","length","handleAddTask","employeeId","trim","deleteEmployee","filter","emp","newTasks","deleteTask","updatedTasks","_","index","selectedTask","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","map","task","type","placeholder","value","onChange","e","target","style","display","gap","backgroundColor","name","_c","$RefreshReg$"],"sources":["/Users/rahulsharma/Desktop/React/webpage/src/visibility.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css'; \n\nconst Visibility = () => {\n  const [showLargeBox, setShowLargeBox] = useState(false);\n  const [showStatusBox, setShowStatusBox] = useState(false);\n  const [status, setStatus] = useState('');\n  const [employees, setEmployees] = useState([1, 2, 3]);\n  const [tasks, setTasks] = useState({\n    1: ['Task 1', 'Task 2', 'Task 3'],\n    2: ['Task 1', 'Task 2', 'Task 3'],\n    3: ['Task 1', 'Task 2', 'Task 3']\n  });\n\n  const [showInputBox, setShowInputBox] = useState(null); // which employee is adding task\n  const [taskInput, setTaskInput] = useState('');         // task name input\n\n  const handleManagerClick = () => {\n    setShowLargeBox(prev => !prev);         \n    setStatus('Not Started');         \n  };\n\n  const handleTaskClick = (empId, taskIndex) => {\n    setSelectedTask({ empId, taskIndex });\n    setShowStatusBox(true);\n    setShowLargeBox(false);\n  };\n  \n\n  const addEmployee = () => {\n    const newId = employees.length + 1;\n    setEmployees(prev => [...prev, newId]); \n    setTasks(prev => ({ ...prev, [newId]: [] }));\n  };\n\n  const handleAddTask = (employeeId) => {\n    if (!taskInput.trim()) return;\n    setTasks(prev => ({\n      ...prev,\n      [employeeId]: [...prev[employeeId], taskInput.trim()]\n    }));\n    setTaskInput('');\n    setShowInputBox(null);\n  };\n  const deleteEmployee = (employeeId) => {\n    setEmployees(prev => prev.filter(emp => emp !== employeeId));\n    setTasks(prev => {\n      const newTasks = { ...prev };\n      delete newTasks[employeeId];\n      return newTasks;\n    });\n  };\n  \n  const deleteTask = (employeeId, taskIndex) => {\n    setTasks(prev => {\n      const updatedTasks = { ...prev };\n      updatedTasks[employeeId] = updatedTasks[employeeId].filter((_, index) => index !== taskIndex); // Remove the specific task\n      return updatedTasks;\n    });\n  };\n  const [selectedTask, setSelectedTask] = useState(null); // { empId, taskIndex }\n\n  \n\n  return (\n    <div>\n      <div className=\"taskbox\">\n        <button onClick={handleManagerClick}>Manager</button>\n      </div>\n\n      <div className=\"taskbox2\">\n        <button id=\"editbtn\" onClick={addEmployee}>+</button>\n      </div>\n\n      <div className={showLargeBox ? '' : 'hidden'}>\n        <div className=\"largebox\">\n          {employees.map(emp => (\n            <div className=\"empbox\" key={emp}>\n              <h3>Employee {emp}</h3>\n              <ul>\n              {(tasks[emp] || []).map((task, index) => (\n                 <li>   \n                    <button onClick={handleTaskClick}>{task}</button>\n                    <button onClick={() => deleteTask(emp, index)}>-</button> \n                  </li>\n                ))}\n              </ul>\n\n              {showInputBox === emp ? (\n                <div>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter task name\"\n                    value={taskInput}\n                    onChange={(e) => setTaskInput(e.target.value)}\n                  />\n                  <button onClick={() => handleAddTask(emp)}>Add</button>\n                  <button onClick={() => setShowInputBox(null)}>Cancel</button>\n                </div>\n              ) : (\n                <div style={{ display: 'flex', gap: '8px' }}>\n                <button onClick={() => setShowInputBox(emp)}>Add New Task</button>\n                <button onClick={() => deleteEmployee(emp)}>🗑️</button>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className={showStatusBox ? '' : 'hidden'}>\n        <div className=\"statusbox\">\n        <ul>\n  {tasks[emp.id]?.map((task, index) => (\n    <li key={index}>\n      <button\n        onClick={() => handleTaskClick(emp.id, index)}\n        style={{\n          backgroundColor:\n            task.status === 'Not Started' ? '#828282' :\n            task.status === 'In Progress' ? 'orange' :\n            task.status === 'Testing' ? 'yellow' :\n            task.status === 'Done' ? 'lightgreen' : ''\n        }}\n      >\n        {task.name}\n      </button>\n    </li>\n  ))}\n</ul>\n\n          <p>Status: {status}</p>\n          <button onClick={() => {\n            setShowStatusBox(false);\n            setShowLargeBox(true);\n          }}>Close</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Visibility;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}