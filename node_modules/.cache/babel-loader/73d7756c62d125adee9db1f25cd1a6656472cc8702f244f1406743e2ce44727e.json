{"ast":null,"code":"var _jsxFileName = \"/Users/rahulsharma/Desktop/React/webpage/src/visibility.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Visibility = () => {\n  _s();\n  const [showLargeBox, setShowLargeBox] = useState(false);\n  const [showStatusBox, setShowStatusBox] = useState(false);\n  const [status, setStatus] = useState('');\n  const [employees, setEmployees] = useState([1, 2, 3]);\n  const [tasks, setTasks] = useState({\n    1: ['Task 1', 'Task 2', 'Task 3'],\n    2: ['Task 1', 'Task 2', 'Task 3'],\n    3: ['Task 1', 'Task 2', 'Task 3']\n  });\n  const [showInputBox, setShowInputBox] = useState(null); // which employee is adding task\n  const [taskInput, setTaskInput] = useState(''); // task name input\n\n  const handleManagerClick = () => {\n    setShowLargeBox(prev => !prev);\n    setStatus('Not Started');\n  };\n  const handleTaskClick = () => {\n    setShowStatusBox(true);\n    setShowLargeBox(false);\n  };\n  const addEmployee = () => {\n    const newId = employees.length + 1;\n    setEmployees(prev => [...prev, newId]);\n    setTasks(prev => ({\n      ...prev,\n      [newId]: []\n    }));\n  };\n  const confirmAddTask = employeeId => {\n    if (!taskInput.trim()) return;\n    setTasks(prev => ({\n      ...prev,\n      [employeeId]: [...prev[employeeId], taskInput.trim()]\n    }));\n    setTaskInput('');\n    setShowInputBox(null);\n  };\n  const deleteEmployee = employeeId => {\n    setEmployees(prev => prev.filter(emp => emp !== employeeId));\n    setTasks(prev => {\n      const newTasks = {\n        ...prev\n      };\n      delete newTasks[employeeId];\n      return newTasks;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskbox\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleManagerClick,\n        children: \"Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskbox2\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"editbtn\",\n        onClick: addEmployee,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: showLargeBox ? '' : 'hidden',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"largebox\",\n        children: employees.map(emp => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Employee \", emp]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: (tasks[emp] || []).map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleTaskClick,\n                children: task\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), showInputBox === emp ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter task name\",\n              value: taskInput,\n              onChange: e => setTaskInput(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => confirmAddTask(emp),\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowInputBox(null),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '8px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowInputBox(emp),\n              children: \"Add New Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteEmployee(emp),\n              children: \"\\uD83D\\uDDD1\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)]\n        }, emp, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: showStatusBox ? '' : 'hidden',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"statusbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setStatus('Not Started'),\n              children: \"Not Started\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setStatus('In Progress'),\n              children: \"In Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setStatus('Testing'),\n              children: \"Testing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setStatus('Done'),\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setShowStatusBox(false);\n            setShowLargeBox(true);\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Visibility, \"qpVWzSyEsqyLoN51dz+piIIX3Rw=\");\n_c = Visibility;\nexport default Visibility;\nvar _c;\n$RefreshReg$(_c, \"Visibility\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Visibility","_s","showLargeBox","setShowLargeBox","showStatusBox","setShowStatusBox","status","setStatus","employees","setEmployees","tasks","setTasks","showInputBox","setShowInputBox","taskInput","setTaskInput","handleManagerClick","prev","handleTaskClick","addEmployee","newId","length","confirmAddTask","employeeId","trim","deleteEmployee","filter","emp","newTasks","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","map","task","index","type","placeholder","value","onChange","e","target","style","display","gap","_c","$RefreshReg$"],"sources":["/Users/rahulsharma/Desktop/React/webpage/src/visibility.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css'; \n\nconst Visibility = () => {\n  const [showLargeBox, setShowLargeBox] = useState(false);\n  const [showStatusBox, setShowStatusBox] = useState(false);\n  const [status, setStatus] = useState('');\n  const [employees, setEmployees] = useState([1, 2, 3]);\n  const [tasks, setTasks] = useState({\n    1: ['Task 1', 'Task 2', 'Task 3'],\n    2: ['Task 1', 'Task 2', 'Task 3'],\n    3: ['Task 1', 'Task 2', 'Task 3']\n  });\n\n  const [showInputBox, setShowInputBox] = useState(null); // which employee is adding task\n  const [taskInput, setTaskInput] = useState('');         // task name input\n\n  const handleManagerClick = () => {\n    setShowLargeBox(prev => !prev);         \n    setStatus('Not Started');         \n  };\n\n  const handleTaskClick = () => {\n    setShowStatusBox(true);\n    setShowLargeBox(false);\n  };\n\n  const addEmployee = () => {\n    const newId = employees.length + 1;\n    setEmployees(prev => [...prev, newId]); \n    setTasks(prev => ({ ...prev, [newId]: [] }));\n  };\n\n  const confirmAddTask = (employeeId) => {\n    if (!taskInput.trim()) return;\n    setTasks(prev => ({\n      ...prev,\n      [employeeId]: [...prev[employeeId], taskInput.trim()]\n    }));\n    setTaskInput('');\n    setShowInputBox(null);\n  };\n  const deleteEmployee = (employeeId) => {\n    setEmployees(prev => prev.filter(emp => emp !== employeeId));\n    setTasks(prev => {\n      const newTasks = { ...prev };\n      delete newTasks[employeeId];\n      return newTasks;\n    });\n  };\n\n\n  return (\n    <div>\n      <div className=\"taskbox\">\n        <button onClick={handleManagerClick}>Manager</button>\n      </div>\n\n      <div className=\"taskbox2\">\n        <button id=\"editbtn\" onClick={addEmployee}>+</button>\n      </div>\n\n      <div className={showLargeBox ? '' : 'hidden'}>\n        <div className=\"largebox\">\n          {employees.map(emp => (\n            <div className=\"empbox\" key={emp}>\n              <h3>Employee {emp}</h3>\n              <ul>\n                {(tasks[emp] || []).map((task, index) => (\n                  <li key={index}>\n                    <button onClick={handleTaskClick}>{task}</button>\n                  </li>\n                ))}\n              </ul>\n\n              {showInputBox === emp ? (\n                <div>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter task name\"\n                    value={taskInput}\n                    onChange={(e) => setTaskInput(e.target.value)}\n                  />\n                  <button onClick={() => confirmAddTask(emp)}>Add</button>\n                  <button onClick={() => setShowInputBox(null)}>Cancel</button>\n                </div>\n              ) : (\n                <div style={{ display: 'flex', gap: '8px' }}>\n                <button onClick={() => setShowInputBox(emp)}>Add New Task</button>\n                <button onClick={() => deleteEmployee(emp)}>🗑️</button>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className={showStatusBox ? '' : 'hidden'}>\n        <div className=\"statusbox\">\n          <ul>\n            <li><button onClick={() => setStatus('Not Started')}>Not Started</button></li>\n            <li><button onClick={() => setStatus('In Progress')}>In Progress</button></li>\n            <li><button onClick={() => setStatus('Testing')}>Testing</button></li>\n            <li><button onClick={() => setStatus('Done')}>Done</button></li>\n          </ul>\n          <p>Status: {status}</p>\n          <button onClick={() => {\n            setShowStatusBox(false);\n            setShowLargeBox(true);\n          }}>Close</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Visibility;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}