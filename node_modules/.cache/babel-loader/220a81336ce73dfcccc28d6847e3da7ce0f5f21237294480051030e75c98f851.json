{"ast":null,"code":"var _jsxFileName = \"/Users/rahulsharma/Desktop/React/webpage/src/visibility.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Visibility = () => {\n  _s();\n  const [showLargeBox, setShowLargeBox] = useState(false);\n  const [showStatusBox, setShowStatusBox] = useState(false);\n  const [status, setStatus] = useState('');\n  const [employees, setEmployees] = useState([1, 2, 3]);\n  const [tasks, setTasks] = useState({\n    1: ['Task 1', 'Task 2', 'Task 3'],\n    2: ['Task 1', 'Task 2'],\n    3: ['Task 1']\n  });\n  const [showInputBox, setShowInputBox] = useState(null);\n  const [taskInput, setTaskInput] = useState('');\n  const [clickedTask, setClickedTask] = useState(null);\n  const handleManagerClick = () => {\n    setShowLargeBox(prev => !prev);\n    setStatus('Not Started');\n  };\n  const handleTaskClick = task => {\n    setClickedTask(task);\n    setShowStatusBox(true);\n    setShowLargeBox(false);\n  };\n  const addEmployee = () => {\n    const newId = employees.length > 0 ? Math.max(...employees) + 1 : 1;\n    setEmployees(prev => [...prev, newId]);\n    setTasks(prev => ({\n      ...prev,\n      [newId]: []\n    }));\n  };\n  const confirmAddTask = employeeId => {\n    if (!taskInput.trim()) return;\n    setTasks(prev => ({\n      ...prev,\n      [employeeId]: [...prev[employeeId], taskInput.trim()]\n    }));\n    setTaskInput('');\n    setShowInputBox(null);\n  };\n  const deleteEmployee = employeeId => {\n    setEmployees(prev => prev.filter(emp => emp !== employeeId));\n    setTasks(prev => {\n      const newTasks = {\n        ...prev\n      };\n      delete newTasks[employeeId];\n      return newTasks;\n    });\n  };\n  const deleteTask = (employeeId, taskIndex) => {\n    setTasks(prev => {\n      const updatedTasks = {\n        ...prev\n      };\n      updatedTasks[employeeId] = updatedTasks[employeeId].filter((_, index) => index !== taskIndex); // Remove the specific task\n      return updatedTasks;\n    });\n  };\n  const changeTaskStatus = status => {\n    if (clickedTask) {\n      let backgroundColor = '';\n      switch (status) {\n        case 'Not Started':\n          backgroundColor = '#828282';\n          break;\n        case 'In Progress':\n          backgroundColor = 'orange';\n          break;\n        case 'Testing':\n          backgroundColor = 'yellow';\n          break;\n        case 'Done':\n          backgroundColor = 'green';\n          break;\n        default:\n          break;\n      }\n\n      // Apply background color to the clicked task\n      clickedTask.style.backgroundColor = backgroundColor;\n      setStatus(status);\n      setShowStatusBox(false);\n      setShowLargeBox(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskbox\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleManagerClick,\n        children: \"Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskbox2\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"editbtn\",\n        onClick: addEmployee,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: showLargeBox ? '' : 'hidden',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"largebox\",\n        children: employees.map(emp => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Employee \", emp]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              listStyleType: 'disc',\n              paddingLeft: '20px'\n            },\n            children: (tasks[emp] || []).map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleTaskClick(task),\n                ref: task === clickedTask ? node => {\n                  if (node) {\n                    clickedTask = node;\n                  }\n                } : null,\n                children: task\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteTask(emp, index),\n                children: \"\\uD83D\\uDDD1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, this), \" \"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), showInputBox === emp ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter task name\",\n              value: taskInput,\n              onChange: e => setTaskInput(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => confirmAddTask(emp),\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowInputBox(null),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '8px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowInputBox(emp),\n              children: \"Add New Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteEmployee(emp),\n              children: \"\\uD83D\\uDDD1\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this)]\n        }, emp, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: showStatusBox ? '' : 'hidden',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"statusbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => changeTaskStatus('Not Started'),\n              children: \"Not Started\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => changeTaskStatus('In Progress'),\n              children: \"In Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => changeTaskStatus('Testing'),\n              children: \"Testing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => changeTaskStatus('Done'),\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setShowStatusBox(false);\n            setShowLargeBox(true);\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(Visibility, \"WB7YI7PTiGd96dM2wGPd5fAtR6A=\");\n_c = Visibility;\nexport default Visibility;\nvar _c;\n$RefreshReg$(_c, \"Visibility\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Visibility","_s","showLargeBox","setShowLargeBox","showStatusBox","setShowStatusBox","status","setStatus","employees","setEmployees","tasks","setTasks","showInputBox","setShowInputBox","taskInput","setTaskInput","clickedTask","setClickedTask","handleManagerClick","prev","handleTaskClick","task","addEmployee","newId","length","Math","max","confirmAddTask","employeeId","trim","deleteEmployee","filter","emp","newTasks","deleteTask","taskIndex","updatedTasks","_","index","changeTaskStatus","backgroundColor","style","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","map","listStyleType","paddingLeft","display","justifyContent","ref","node","type","placeholder","value","onChange","e","target","gap","_c","$RefreshReg$"],"sources":["/Users/rahulsharma/Desktop/React/webpage/src/visibility.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css'; \n\nconst Visibility = () => {\n  const [showLargeBox, setShowLargeBox] = useState(false);\n  const [showStatusBox, setShowStatusBox] = useState(false);\n  const [status, setStatus] = useState('');\n  const [employees, setEmployees] = useState([1, 2, 3]);\n  const [tasks, setTasks] = useState({\n    1: ['Task 1', 'Task 2', 'Task 3'],\n    2: ['Task 1', 'Task 2'],\n    3: ['Task 1']\n  });\n\n  const [showInputBox, setShowInputBox] = useState(null);\n  const [taskInput, setTaskInput] = useState('');\n  const [clickedTask, setClickedTask] = useState(null);\n\n  const handleManagerClick = () => {\n    setShowLargeBox(prev => !prev);         \n    setStatus('Not Started');         \n  };\n\n  const handleTaskClick = (task) => {\n    setClickedTask(task);\n    setShowStatusBox(true);\n    setShowLargeBox(false);\n  };\n\n  const addEmployee = () => {\n    const newId = employees.length > 0 ? Math.max(...employees) + 1 : 1;\n    setEmployees(prev => [...prev, newId]); \n    setTasks(prev => ({ ...prev, [newId]: [] }));\n  };\n\n  const confirmAddTask = (employeeId) => {\n    if (!taskInput.trim()) return;\n    setTasks(prev => ({\n      ...prev,\n      [employeeId]: [...prev[employeeId], taskInput.trim()]\n    }));\n    setTaskInput('');\n    setShowInputBox(null);\n  };\n\n  const deleteEmployee = (employeeId) => {\n    setEmployees(prev => prev.filter(emp => emp !== employeeId));\n    setTasks(prev => {\n      const newTasks = { ...prev };\n      delete newTasks[employeeId];\n      return newTasks;\n    });\n  };\n\n  const deleteTask = (employeeId, taskIndex) => {\n    setTasks(prev => {\n      const updatedTasks = { ...prev };\n      updatedTasks[employeeId] = updatedTasks[employeeId].filter((_, index) => index !== taskIndex); // Remove the specific task\n      return updatedTasks;\n    });\n  };\n\n  const changeTaskStatus = (status) => {\n    if (clickedTask) {\n      let backgroundColor = '';\n      switch (status) {\n        case 'Not Started':\n          backgroundColor = '#828282';\n          break;\n        case 'In Progress':\n          backgroundColor = 'orange';\n          break;\n        case 'Testing':\n          backgroundColor = 'yellow';\n          break;\n        case 'Done':\n          backgroundColor = 'green';\n          break;\n        default:\n          break;\n      }\n\n      // Apply background color to the clicked task\n      clickedTask.style.backgroundColor = backgroundColor;\n      setStatus(status);\n      setShowStatusBox(false);\n      setShowLargeBox(true);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"taskbox\">\n        <button onClick={handleManagerClick}>Manager</button>\n      </div>\n\n      <div className=\"taskbox2\">\n        <button id=\"editbtn\" onClick={addEmployee}>+</button>\n      </div>\n\n      <div className={showLargeBox ? '' : 'hidden'}>\n        <div className=\"largebox\">\n          {employees.map(emp => (\n            <div className=\"empbox\" key={emp}>\n              <h3>Employee {emp}</h3>\n\n              <ul style={{ listStyleType: 'disc', paddingLeft: '20px' }}>\n                {(tasks[emp] || []).map((task, index) => (\n                  <li key={index} style={{ display: 'flex', justifyContent: 'space-between' }}>\n                    <button \n                      onClick={() => handleTaskClick(task)}\n                      ref={task === clickedTask ? (node) => { if (node) { clickedTask = node } } : null}\n                    >\n                      {task}\n                    </button>\n                    <button onClick={() => deleteTask(emp, index)}>🗑️</button> {/* Delete task button */}\n                  </li>\n                ))}\n              </ul>\n\n              {showInputBox === emp ? (\n                <div>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter task name\"\n                    value={taskInput}\n                    onChange={(e) => setTaskInput(e.target.value)}\n                  />\n                  <button onClick={() => confirmAddTask(emp)}>Add</button>\n                  <button onClick={() => setShowInputBox(null)}>Cancel</button>\n                </div>\n              ) : (\n                <div style={{ display: 'flex', gap: '8px' }}>\n                  <button onClick={() => setShowInputBox(emp)}>Add New Task</button>\n                  <button onClick={() => deleteEmployee(emp)}>🗑️</button>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className={showStatusBox ? '' : 'hidden'}>\n        <div className=\"statusbox\">\n          <ul>\n            <li><button onClick={() => changeTaskStatus('Not Started')}>Not Started</button></li>\n            <li><button onClick={() => changeTaskStatus('In Progress')}>In Progress</button></li>\n            <li><button onClick={() => changeTaskStatus('Testing')}>Testing</button></li>\n            <li><button onClick={() => changeTaskStatus('Done')}>Done</button></li>\n          </ul>\n          <p>Status: {status}</p>\n          <button onClick={() => {\n            setShowStatusBox(false);\n            setShowLargeBox(true);\n          }}>Close</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Visibility;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}