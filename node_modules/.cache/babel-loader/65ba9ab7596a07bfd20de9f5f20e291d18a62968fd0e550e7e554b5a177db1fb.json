{"ast":null,"code":"var _jsxFileName = \"/Users/rahulsharma/Desktop/React/webpage/src/visibility.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Visibility = () => {\n  _s();\n  const [showLargeBox, setShowLargeBox] = useState(false);\n  const [showStatusBox, setShowStatusBox] = useState(false);\n  const [status, setStatus] = useState('');\n  const [employees, setEmployees] = useState([1, 2, 3]);\n  const [tasks, setTasks] = useState({\n    1: ['Task 1', 'Task 2', 'Task 3'],\n    2: ['Task 1', 'Task 2'],\n    3: ['Task 1']\n  });\n  const [showInputBox, setShowInputBox] = useState(null);\n  const [taskInput, setTaskInput] = useState('');\n  const taskRefs = useRef({}); // Store task references for background color updates\n\n  const handleManagerClick = () => {\n    setShowLargeBox(prev => !prev);\n    setStatus('Not Started');\n  };\n  const addEmployee = () => {\n    const newId = employees.length > 0 ? Math.max(...employees) + 1 : 1;\n    setEmployees(prev => [...prev, newId]);\n    setTasks(prev => ({\n      ...prev,\n      [newId]: []\n    }));\n  };\n  const confirmAddTask = employeeId => {\n    if (!taskInput.trim()) return;\n    setTasks(prev => ({\n      ...prev,\n      [employeeId]: [...prev[employeeId], taskInput.trim()]\n    }));\n    setTaskInput('');\n    setShowInputBox(null);\n  };\n  const deleteEmployee = employeeId => {\n    setEmployees(prev => prev.filter(emp => emp !== employeeId));\n    setTasks(prev => {\n      const newTasks = {\n        ...prev\n      };\n      delete newTasks[employeeId];\n      return newTasks;\n    });\n  };\n  const deleteTask = (employeeId, taskIndex) => {\n    setTasks(prev => {\n      const updatedTasks = {\n        ...prev\n      };\n      updatedTasks[employeeId] = updatedTasks[employeeId].filter((_, index) => index !== taskIndex);\n      return updatedTasks;\n    });\n  };\n  const changeTaskStatus = newStatus => {\n    // Define colors for each status\n    let backgroundColor = '';\n    switch (newStatus) {\n      case 'Not Started':\n        backgroundColor = '#828282';\n        break;\n      case 'In Progress':\n        backgroundColor = 'orange';\n        break;\n      case 'Testing':\n        backgroundColor = 'yellow';\n        break;\n      case 'Done':\n        backgroundColor = 'green';\n        break;\n      default:\n        break;\n    }\n\n    // Apply background color to each task button\n    Object.keys(taskRefs.current).forEach(task => {\n      taskRefs.current[task].forEach(ref => {\n        ref.style.backgroundColor = backgroundColor;\n      });\n    });\n    setStatus(newStatus);\n    setShowStatusBox(false);\n    setShowLargeBox(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskbox\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleManagerClick,\n        children: \"Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskbox2\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"editbtn\",\n        onClick: addEmployee,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: showLargeBox ? '' : 'hidden',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"largebox\",\n        children: employees.map(emp => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Employee \", emp]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              listStyleType: 'disc',\n              paddingLeft: '20px'\n            },\n            children: (tasks[emp] || []).map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                ref: el => {\n                  if (!taskRefs.current[task]) {\n                    taskRefs.current[task] = [];\n                  }\n                  taskRefs.current[task].push(el); // Store reference to task button\n                },\n                children: task\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteTask(emp, index),\n                children: \"\\uD83D\\uDDD1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 21\n              }, this), \" \"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), showInputBox === emp ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter task name\",\n              value: taskInput,\n              onChange: e => setTaskInput(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => confirmAddTask(emp),\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowInputBox(null),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '8px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowInputBox(emp),\n              children: \"Add New Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteEmployee(emp),\n              children: \"\\uD83D\\uDDD1\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this)]\n        }, emp, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: showStatusBox ? '' : 'hidden',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"statusbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => changeTaskStatus('Not Started'),\n              children: \"Not Started\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => changeTaskStatus('In Progress'),\n              children: \"In Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => changeTaskStatus('Testing'),\n              children: \"Testing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => changeTaskStatus('Done'),\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setShowStatusBox(false);\n            setShowLargeBox(true);\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(Visibility, \"kfasf+y2EPjeKTV6nFb8yDBf2z0=\");\n_c = Visibility;\nexport default Visibility;\nvar _c;\n$RefreshReg$(_c, \"Visibility\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Visibility","_s","showLargeBox","setShowLargeBox","showStatusBox","setShowStatusBox","status","setStatus","employees","setEmployees","tasks","setTasks","showInputBox","setShowInputBox","taskInput","setTaskInput","taskRefs","handleManagerClick","prev","addEmployee","newId","length","Math","max","confirmAddTask","employeeId","trim","deleteEmployee","filter","emp","newTasks","deleteTask","taskIndex","updatedTasks","_","index","changeTaskStatus","newStatus","backgroundColor","Object","keys","current","forEach","task","ref","style","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","map","listStyleType","paddingLeft","display","justifyContent","el","push","type","placeholder","value","onChange","e","target","gap","_c","$RefreshReg$"],"sources":["/Users/rahulsharma/Desktop/React/webpage/src/visibility.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport './App.css';\n\nconst Visibility = () => {\n  const [showLargeBox, setShowLargeBox] = useState(false);\n  const [showStatusBox, setShowStatusBox] = useState(false);\n  const [status, setStatus] = useState('');\n  const [employees, setEmployees] = useState([1, 2, 3]);\n  const [tasks, setTasks] = useState({\n    1: ['Task 1', 'Task 2', 'Task 3'],\n    2: ['Task 1', 'Task 2'],\n    3: ['Task 1'],\n  });\n\n  const [showInputBox, setShowInputBox] = useState(null);\n  const [taskInput, setTaskInput] = useState('');\n  const taskRefs = useRef({}); // Store task references for background color updates\n\n  const handleManagerClick = () => {\n    setShowLargeBox((prev) => !prev);\n    setStatus('Not Started');\n  };\n\n  const addEmployee = () => {\n    const newId = employees.length > 0 ? Math.max(...employees) + 1 : 1;\n    setEmployees((prev) => [...prev, newId]);\n    setTasks((prev) => ({ ...prev, [newId]: [] }));\n  };\n\n  const confirmAddTask = (employeeId) => {\n    if (!taskInput.trim()) return;\n    setTasks((prev) => ({\n      ...prev,\n      [employeeId]: [...prev[employeeId], taskInput.trim()],\n    }));\n    setTaskInput('');\n    setShowInputBox(null);\n  };\n\n  const deleteEmployee = (employeeId) => {\n    setEmployees((prev) => prev.filter((emp) => emp !== employeeId));\n    setTasks((prev) => {\n      const newTasks = { ...prev };\n      delete newTasks[employeeId];\n      return newTasks;\n    });\n  };\n\n  const deleteTask = (employeeId, taskIndex) => {\n    setTasks((prev) => {\n      const updatedTasks = { ...prev };\n      updatedTasks[employeeId] = updatedTasks[employeeId].filter(\n        (_, index) => index !== taskIndex\n      );\n      return updatedTasks;\n    });\n  };\n\n  const changeTaskStatus = (newStatus) => {\n    // Define colors for each status\n    let backgroundColor = '';\n    switch (newStatus) {\n      case 'Not Started':\n        backgroundColor = '#828282';\n        break;\n      case 'In Progress':\n        backgroundColor = 'orange';\n        break;\n      case 'Testing':\n        backgroundColor = 'yellow';\n        break;\n      case 'Done':\n        backgroundColor = 'green';\n        break;\n      default:\n        break;\n    }\n\n    // Apply background color to each task button\n    Object.keys(taskRefs.current).forEach((task) => {\n      taskRefs.current[task].forEach((ref) => {\n        ref.style.backgroundColor = backgroundColor;\n      });\n    });\n\n    setStatus(newStatus);\n    setShowStatusBox(false);\n    setShowLargeBox(true);\n  };\n\n  return (\n    <div>\n      <div className=\"taskbox\">\n        <button onClick={handleManagerClick}>Manager</button>\n      </div>\n\n      <div className=\"taskbox2\">\n        <button id=\"editbtn\" onClick={addEmployee}>\n          +\n        </button>\n      </div>\n\n      <div className={showLargeBox ? '' : 'hidden'}>\n        <div className=\"largebox\">\n          {employees.map((emp) => (\n            <div className=\"empbox\" key={emp}>\n              <h3>Employee {emp}</h3>\n\n              <ul style={{ listStyleType: 'disc', paddingLeft: '20px' }}>\n                {(tasks[emp] || []).map((task, index) => (\n                  <li\n                    key={index}\n                    style={{ display: 'flex', justifyContent: 'space-between' }}\n                  >\n                    <button\n                      ref={(el) => {\n                        if (!taskRefs.current[task]) {\n                          taskRefs.current[task] = [];\n                        }\n                        taskRefs.current[task].push(el); // Store reference to task button\n                      }}\n                    >\n                      {task}\n                    </button>\n                    <button onClick={() => deleteTask(emp, index)}>🗑️</button> {/* Delete task button */}\n                  </li>\n                ))}\n              </ul>\n\n              {showInputBox === emp ? (\n                <div>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter task name\"\n                    value={taskInput}\n                    onChange={(e) => setTaskInput(e.target.value)}\n                  />\n                  <button onClick={() => confirmAddTask(emp)}>Add</button>\n                  <button onClick={() => setShowInputBox(null)}>Cancel</button>\n                </div>\n              ) : (\n                <div style={{ display: 'flex', gap: '8px' }}>\n                  <button onClick={() => setShowInputBox(emp)}>Add New Task</button>\n                  <button onClick={() => deleteEmployee(emp)}>🗑️</button>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className={showStatusBox ? '' : 'hidden'}>\n        <div className=\"statusbox\">\n          <ul>\n            <li>\n              <button onClick={() => changeTaskStatus('Not Started')}>\n                Not Started\n              </button>\n            </li>\n            <li>\n              <button onClick={() => changeTaskStatus('In Progress')}>\n                In Progress\n              </button>\n            </li>\n            <li>\n              <button onClick={() => changeTaskStatus('Testing')}>Testing</button>\n            </li>\n            <li>\n              <button onClick={() => changeTaskStatus('Done')}>Done</button>\n            </li>\n          </ul>\n          <p>Status: {status}</p>\n          <button\n            onClick={() => {\n              setShowStatusBox(false);\n              setShowLargeBox(true);\n            }}\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Visibility;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}