{"ast":null,"code":"var _jsxFileName = \"/Users/rahulsharma/Desktop/React/webpage/src/visibility.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Visibility = () => {\n  _s();\n  const [showLargeBox, setShowLargeBox] = useState(false);\n  const [showStatusBox, setShowStatusBox] = useState(false);\n  const [status, setStatus] = useState('');\n  const [employees, setEmployees] = useState([1, 2, 3]);\n  const [tasks, setTasks] = useState({\n    1: ['Task 1', 'Task 2', 'Task 3'],\n    2: ['Task 1', 'Task 2'],\n    3: ['Task 1']\n  });\n  const [taskColors, setTaskColors] = useState({}); // New state to store task colors\n\n  const handleManagerClick = () => {\n    setShowLargeBox(prev => !prev);\n    setStatus('Not Started');\n  };\n  const addEmployee = () => {\n    const newId = employees.length > 0 ? Math.max(...employees) + 1 : 1;\n    setEmployees(prev => [...prev, newId]);\n    setTasks(prev => ({\n      ...prev,\n      [newId]: []\n    }));\n  };\n  const deleteEmployee = employeeId => {\n    setEmployees(prev => prev.filter(emp => emp !== employeeId));\n    setTasks(prev => {\n      const newTasks = {\n        ...prev\n      };\n      delete newTasks[employeeId];\n      return newTasks;\n    });\n  };\n  const deleteTask = (employeeId, taskIndex) => {\n    setTasks(prev => {\n      const updatedTasks = {\n        ...prev\n      };\n      updatedTasks[employeeId] = updatedTasks[employeeId].filter((_, index) => index !== taskIndex);\n      return updatedTasks;\n    });\n  };\n  const addTask = employeeId => {\n    const newTask = `Task ${tasks[employeeId].length + 1}`;\n    setTasks(prev => ({\n      ...prev,\n      [employeeId]: [...prev[employeeId], newTask]\n    }));\n  };\n  const changeTaskStatus = newStatus => {\n    let color = '';\n    if (newStatus === 'Not Started') color = '#828282';\n    if (newStatus === 'In Progress') color = 'orange';\n    if (newStatus === 'Testing') color = 'yellow';\n    if (newStatus === 'Done') color = 'green';\n\n    // Update task colors based on status\n    setTaskColors(prevColors => {\n      const updatedColors = {\n        ...prevColors\n      };\n      Object.keys(updatedColors).forEach(key => {\n        updatedColors[key] = color;\n      });\n      return updatedColors;\n    });\n    setStatus(newStatus);\n    setShowStatusBox(false);\n    setShowLargeBox(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskbox\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleManagerClick,\n        children: \"Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskbox2\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"editbtn\",\n        onClick: addEmployee,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: showLargeBox ? '' : 'hidden',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"largebox\",\n        children: employees.map(emp => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Employee \", emp]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: tasks[emp].map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                backgroundColor: taskColors[task]\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                children: task\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteTask(emp, index),\n                children: \"\\uD83D\\uDDD1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addTask(emp),\n            children: \"Add New Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteEmployee(emp),\n            children: \"Delete Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, emp, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: showStatusBox ? '' : 'hidden',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"statusbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => changeTaskStatus('Not Started'),\n              children: \"Not Started\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => changeTaskStatus('In Progress'),\n              children: \"In Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => changeTaskStatus('Testing'),\n              children: \"Testing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => changeTaskStatus('Done'),\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setShowStatusBox(false);\n            setShowLargeBox(true);\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Visibility, \"vbJT/CrNjObrArKhoj011DuB74Q=\");\n_c = Visibility;\nexport default Visibility;\nvar _c;\n$RefreshReg$(_c, \"Visibility\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Visibility","_s","showLargeBox","setShowLargeBox","showStatusBox","setShowStatusBox","status","setStatus","employees","setEmployees","tasks","setTasks","taskColors","setTaskColors","handleManagerClick","prev","addEmployee","newId","length","Math","max","deleteEmployee","employeeId","filter","emp","newTasks","deleteTask","taskIndex","updatedTasks","_","index","addTask","newTask","changeTaskStatus","newStatus","color","prevColors","updatedColors","Object","keys","forEach","key","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","map","task","style","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/rahulsharma/Desktop/React/webpage/src/visibility.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst Visibility = () => {\n  const [showLargeBox, setShowLargeBox] = useState(false);\n  const [showStatusBox, setShowStatusBox] = useState(false);\n  const [status, setStatus] = useState('');\n  const [employees, setEmployees] = useState([1, 2, 3]);\n  const [tasks, setTasks] = useState({\n    1: ['Task 1', 'Task 2', 'Task 3'],\n    2: ['Task 1', 'Task 2'],\n    3: ['Task 1'],\n  });\n\n  const [taskColors, setTaskColors] = useState({}); // New state to store task colors\n\n  const handleManagerClick = () => {\n    setShowLargeBox((prev) => !prev);\n    setStatus('Not Started');\n  };\n\n  const addEmployee = () => {\n    const newId = employees.length > 0 ? Math.max(...employees) + 1 : 1;\n    setEmployees((prev) => [...prev, newId]);\n    setTasks((prev) => ({ ...prev, [newId]: [] }));\n  };\n\n  const deleteEmployee = (employeeId) => {\n    setEmployees((prev) => prev.filter((emp) => emp !== employeeId));\n    setTasks((prev) => {\n      const newTasks = { ...prev };\n      delete newTasks[employeeId];\n      return newTasks;\n    });\n  };\n\n  const deleteTask = (employeeId, taskIndex) => {\n    setTasks((prev) => {\n      const updatedTasks = { ...prev };\n      updatedTasks[employeeId] = updatedTasks[employeeId].filter(\n        (_, index) => index !== taskIndex\n      );\n      return updatedTasks;\n    });\n  };\n\n  const addTask = (employeeId) => {\n    const newTask = `Task ${tasks[employeeId].length + 1}`;\n    setTasks((prev) => ({\n      ...prev,\n      [employeeId]: [...prev[employeeId], newTask],\n    }));\n  };\n\n  const changeTaskStatus = (newStatus) => {\n    let color = '';\n    if (newStatus === 'Not Started') color = '#828282';\n    if (newStatus === 'In Progress') color = 'orange';\n    if (newStatus === 'Testing') color = 'yellow';\n    if (newStatus === 'Done') color = 'green';\n\n    // Update task colors based on status\n    setTaskColors((prevColors) => {\n      const updatedColors = { ...prevColors };\n      Object.keys(updatedColors).forEach((key) => {\n        updatedColors[key] = color;\n      });\n      return updatedColors;\n    });\n\n    setStatus(newStatus);\n    setShowStatusBox(false);\n    setShowLargeBox(true);\n  };\n\n  return (\n    <div>\n      <div className=\"taskbox\">\n        <button onClick={handleManagerClick}>Manager</button>\n      </div>\n\n      <div className=\"taskbox2\">\n        <button id=\"editbtn\" onClick={addEmployee}>\n          +\n        </button>\n      </div>\n\n      <div className={showLargeBox ? '' : 'hidden'}>\n        <div className=\"largebox\">\n          {employees.map((emp) => (\n            <div className=\"empbox\" key={emp}>\n              <h3>Employee {emp}</h3>\n\n              <ul>\n                {tasks[emp].map((task, index) => (\n                  <li key={index} style={{ backgroundColor: taskColors[task] }}>\n                    <button>{task}</button>\n                    <button onClick={() => deleteTask(emp, index)}>🗑️</button>\n                  </li>\n                ))}\n              </ul>\n              <button onClick={() => addTask(emp)}>Add New Task</button>\n              <button onClick={() => deleteEmployee(emp)}>Delete Employee</button>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className={showStatusBox ? '' : 'hidden'}>\n        <div className=\"statusbox\">\n          <ul>\n            <li>\n              <button onClick={() => changeTaskStatus('Not Started')}>\n                Not Started\n              </button>\n            </li>\n            <li>\n              <button onClick={() => changeTaskStatus('In Progress')}>\n                In Progress\n              </button>\n            </li>\n            <li>\n              <button onClick={() => changeTaskStatus('Testing')}>\n                Testing\n              </button>\n            </li>\n            <li>\n              <button onClick={() => changeTaskStatus('Done')}>Done</button>\n            </li>\n          </ul>\n          <p>Status: {status}</p>\n          <button\n            onClick={() => {\n              setShowStatusBox(false);\n              setShowLargeBox(true);\n            }}\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Visibility;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACrD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC;IACjC,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;IACjC,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC;IACvB,CAAC,EAAE,CAAC,QAAQ;EACd,CAAC,CAAC;EAEF,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAElD,MAAMiB,kBAAkB,GAAGA,CAAA,KAAM;IAC/BX,eAAe,CAAEY,IAAI,IAAK,CAACA,IAAI,CAAC;IAChCR,SAAS,CAAC,aAAa,CAAC;EAC1B,CAAC;EAED,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,KAAK,GAAGT,SAAS,CAACU,MAAM,GAAG,CAAC,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGZ,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC;IACnEC,YAAY,CAAEM,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEE,KAAK,CAAC,CAAC;IACxCN,QAAQ,CAAEI,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACE,KAAK,GAAG;IAAG,CAAC,CAAC,CAAC;EAChD,CAAC;EAED,MAAMI,cAAc,GAAIC,UAAU,IAAK;IACrCb,YAAY,CAAEM,IAAI,IAAKA,IAAI,CAACQ,MAAM,CAAEC,GAAG,IAAKA,GAAG,KAAKF,UAAU,CAAC,CAAC;IAChEX,QAAQ,CAAEI,IAAI,IAAK;MACjB,MAAMU,QAAQ,GAAG;QAAE,GAAGV;MAAK,CAAC;MAC5B,OAAOU,QAAQ,CAACH,UAAU,CAAC;MAC3B,OAAOG,QAAQ;IACjB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,UAAU,GAAGA,CAACJ,UAAU,EAAEK,SAAS,KAAK;IAC5ChB,QAAQ,CAAEI,IAAI,IAAK;MACjB,MAAMa,YAAY,GAAG;QAAE,GAAGb;MAAK,CAAC;MAChCa,YAAY,CAACN,UAAU,CAAC,GAAGM,YAAY,CAACN,UAAU,CAAC,CAACC,MAAM,CACxD,CAACM,CAAC,EAAEC,KAAK,KAAKA,KAAK,KAAKH,SAC1B,CAAC;MACD,OAAOC,YAAY;IACrB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMG,OAAO,GAAIT,UAAU,IAAK;IAC9B,MAAMU,OAAO,GAAG,QAAQtB,KAAK,CAACY,UAAU,CAAC,CAACJ,MAAM,GAAG,CAAC,EAAE;IACtDP,QAAQ,CAAEI,IAAI,KAAM;MAClB,GAAGA,IAAI;MACP,CAACO,UAAU,GAAG,CAAC,GAAGP,IAAI,CAACO,UAAU,CAAC,EAAEU,OAAO;IAC7C,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMC,gBAAgB,GAAIC,SAAS,IAAK;IACtC,IAAIC,KAAK,GAAG,EAAE;IACd,IAAID,SAAS,KAAK,aAAa,EAAEC,KAAK,GAAG,SAAS;IAClD,IAAID,SAAS,KAAK,aAAa,EAAEC,KAAK,GAAG,QAAQ;IACjD,IAAID,SAAS,KAAK,SAAS,EAAEC,KAAK,GAAG,QAAQ;IAC7C,IAAID,SAAS,KAAK,MAAM,EAAEC,KAAK,GAAG,OAAO;;IAEzC;IACAtB,aAAa,CAAEuB,UAAU,IAAK;MAC5B,MAAMC,aAAa,GAAG;QAAE,GAAGD;MAAW,CAAC;MACvCE,MAAM,CAACC,IAAI,CAACF,aAAa,CAAC,CAACG,OAAO,CAAEC,GAAG,IAAK;QAC1CJ,aAAa,CAACI,GAAG,CAAC,GAAGN,KAAK;MAC5B,CAAC,CAAC;MACF,OAAOE,aAAa;IACtB,CAAC,CAAC;IAEF9B,SAAS,CAAC2B,SAAS,CAAC;IACpB7B,gBAAgB,CAAC,KAAK,CAAC;IACvBF,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,oBACEJ,OAAA;IAAA2C,QAAA,gBACE3C,OAAA;MAAK4C,SAAS,EAAC,SAAS;MAAAD,QAAA,eACtB3C,OAAA;QAAQ6C,OAAO,EAAE9B,kBAAmB;QAAA4B,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eAENjD,OAAA;MAAK4C,SAAS,EAAC,UAAU;MAAAD,QAAA,eACvB3C,OAAA;QAAQkD,EAAE,EAAC,SAAS;QAACL,OAAO,EAAE5B,WAAY;QAAA0B,QAAA,EAAC;MAE3C;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENjD,OAAA;MAAK4C,SAAS,EAAEzC,YAAY,GAAG,EAAE,GAAG,QAAS;MAAAwC,QAAA,eAC3C3C,OAAA;QAAK4C,SAAS,EAAC,UAAU;QAAAD,QAAA,EACtBlC,SAAS,CAAC0C,GAAG,CAAE1B,GAAG,iBACjBzB,OAAA;UAAK4C,SAAS,EAAC,QAAQ;UAAAD,QAAA,gBACrB3C,OAAA;YAAA2C,QAAA,GAAI,WAAS,EAAClB,GAAG;UAAA;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAEvBjD,OAAA;YAAA2C,QAAA,EACGhC,KAAK,CAACc,GAAG,CAAC,CAAC0B,GAAG,CAAC,CAACC,IAAI,EAAErB,KAAK,kBAC1B/B,OAAA;cAAgBqD,KAAK,EAAE;gBAAEC,eAAe,EAAEzC,UAAU,CAACuC,IAAI;cAAE,CAAE;cAAAT,QAAA,gBAC3D3C,OAAA;gBAAA2C,QAAA,EAASS;cAAI;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC,eACvBjD,OAAA;gBAAQ6C,OAAO,EAAEA,CAAA,KAAMlB,UAAU,CAACF,GAAG,EAAEM,KAAK,CAAE;gBAAAY,QAAA,EAAC;cAAG;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA,GAFpDlB,KAAK;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAGV,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACLjD,OAAA;YAAQ6C,OAAO,EAAEA,CAAA,KAAMb,OAAO,CAACP,GAAG,CAAE;YAAAkB,QAAA,EAAC;UAAY;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC1DjD,OAAA;YAAQ6C,OAAO,EAAEA,CAAA,KAAMvB,cAAc,CAACG,GAAG,CAAE;YAAAkB,QAAA,EAAC;UAAe;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAZzCxB,GAAG;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAa3B,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENjD,OAAA;MAAK4C,SAAS,EAAEvC,aAAa,GAAG,EAAE,GAAG,QAAS;MAAAsC,QAAA,eAC5C3C,OAAA;QAAK4C,SAAS,EAAC,WAAW;QAAAD,QAAA,gBACxB3C,OAAA;UAAA2C,QAAA,gBACE3C,OAAA;YAAA2C,QAAA,eACE3C,OAAA;cAAQ6C,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAAC,aAAa,CAAE;cAAAS,QAAA,EAAC;YAExD;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC,eACLjD,OAAA;YAAA2C,QAAA,eACE3C,OAAA;cAAQ6C,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAAC,aAAa,CAAE;cAAAS,QAAA,EAAC;YAExD;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC,eACLjD,OAAA;YAAA2C,QAAA,eACE3C,OAAA;cAAQ6C,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAAC,SAAS,CAAE;cAAAS,QAAA,EAAC;YAEpD;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC,eACLjD,OAAA;YAAA2C,QAAA,eACE3C,OAAA;cAAQ6C,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAAC,MAAM,CAAE;cAAAS,QAAA,EAAC;YAAI;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACLjD,OAAA;UAAA2C,QAAA,GAAG,UAAQ,EAACpC,MAAM;QAAA;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvBjD,OAAA;UACE6C,OAAO,EAAEA,CAAA,KAAM;YACbvC,gBAAgB,CAAC,KAAK,CAAC;YACvBF,eAAe,CAAC,IAAI,CAAC;UACvB,CAAE;UAAAuC,QAAA,EACH;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/C,EAAA,CA5IID,UAAU;AAAAsD,EAAA,GAAVtD,UAAU;AA8IhB,eAAeA,UAAU;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}