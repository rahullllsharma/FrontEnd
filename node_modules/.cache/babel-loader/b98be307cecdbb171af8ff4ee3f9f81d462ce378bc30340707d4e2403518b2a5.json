{"ast":null,"code":"var _jsxFileName = \"/Users/rahulsharma/Desktop/React/webpage/src/visibility.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Visibility = () => {\n  _s();\n  var _tasks$emp$id;\n  const [showLargeBox, setShowLargeBox] = useState(false);\n  const [showStatusBox, setShowStatusBox] = useState(false);\n  const [status, setStatus] = useState('');\n  const [employees, setEmployees] = useState([1, 2, 3]);\n  const [tasks, setTasks] = useState({\n    1: [{\n      name: 'Task 1',\n      status: 'Not Started'\n    }, {\n      name: 'Task 2',\n      status: 'Not Started'\n    }, {\n      name: 'Task 3',\n      status: 'Not Started'\n    }],\n    2: [{\n      name: 'Task 1',\n      status: 'Not Started'\n    }, {\n      name: 'Task 2',\n      status: 'Not Started'\n    }, {\n      name: 'Task 3',\n      status: 'Not Started'\n    }],\n    3: [{\n      name: 'Task 1',\n      status: 'Not Started'\n    }, {\n      name: 'Task 2',\n      status: 'Not Started'\n    }, {\n      name: 'Task 3',\n      status: 'Not Started'\n    }]\n  });\n  const [showInputBox, setShowInputBox] = useState(null); // which employee is adding task\n  const [taskInput, setTaskInput] = useState(''); // task name input\n\n  const handleManagerClick = () => {\n    setShowLargeBox(prev => !prev);\n    setStatus('Not Started');\n  };\n  const [selectedTask, setSelectedTask] = useState(null); // { empId, taskIndex }\n  const handleTaskClick = (empId, taskIndex) => {\n    setSelectedTask({\n      empId,\n      taskIndex\n    });\n    setShowStatusBox(true);\n    setShowLargeBox(false);\n  };\n  const addEmployee = () => {\n    const newId = employees.length + 1;\n    setEmployees(prev => [...prev, newId]);\n    setTasks(prev => ({\n      ...prev,\n      [newId]: []\n    }));\n  };\n  const handleAddTask = employeeId => {\n    if (!taskInput.trim()) return;\n    setTasks(prev => ({\n      ...prev,\n      [employeeId]: [...prev[employeeId], taskInput.trim()]\n    }));\n    setTaskInput('');\n    setShowInputBox(null);\n  };\n  const deleteEmployee = employeeId => {\n    setEmployees(prev => prev.filter(emp => emp !== employeeId));\n    setTasks(prev => {\n      const newTasks = {\n        ...prev\n      };\n      delete newTasks[employeeId];\n      return newTasks;\n    });\n  };\n  const deleteTask = (employeeId, taskIndex) => {\n    setTasks(prev => {\n      const updatedTasks = {\n        ...prev\n      };\n      updatedTasks[employeeId] = updatedTasks[employeeId].filter((_, index) => index !== taskIndex); // Remove the specific task\n      return updatedTasks;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskbox\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleManagerClick,\n        children: \"Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskbox2\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"editbtn\",\n        onClick: addEmployee,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: showLargeBox ? '' : 'hidden',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"largebox\",\n        children: employees.map(emp => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Employee \", emp]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: (tasks[emp] || []).map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleTaskClick,\n                children: task\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteTask(emp, index),\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 18\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), showInputBox === emp ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter task name\",\n              value: taskInput,\n              onChange: e => setTaskInput(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleAddTask(emp),\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowInputBox(null),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '8px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowInputBox(emp),\n              children: \"Add New Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteEmployee(emp),\n              children: \"\\uD83D\\uDDD1\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)]\n        }, emp, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: showStatusBox ? '' : 'hidden',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"statusbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: (_tasks$emp$id = tasks[emp.id]) === null || _tasks$emp$id === void 0 ? void 0 : _tasks$emp$id.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleTaskClick(emp.id, index),\n              style: {\n                backgroundColor: task.status === 'Not Started' ? '#828282' : task.status === 'In Progress' ? 'orange' : task.status === 'Testing' ? 'yellow' : task.status === 'Done' ? 'lightgreen' : ''\n              },\n              children: task.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 7\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 5\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setShowStatusBox(false);\n            setShowLargeBox(true);\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Visibility, \"rXJBcaaQInUZ+OhkN5mBzw+mAtU=\");\n_c = Visibility;\nexport default Visibility;\nvar _c;\n$RefreshReg$(_c, \"Visibility\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Visibility","_s","_tasks$emp$id","showLargeBox","setShowLargeBox","showStatusBox","setShowStatusBox","status","setStatus","employees","setEmployees","tasks","setTasks","name","showInputBox","setShowInputBox","taskInput","setTaskInput","handleManagerClick","prev","selectedTask","setSelectedTask","handleTaskClick","empId","taskIndex","addEmployee","newId","length","handleAddTask","employeeId","trim","deleteEmployee","filter","emp","newTasks","deleteTask","updatedTasks","_","index","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","map","task","type","placeholder","value","onChange","e","target","style","display","gap","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/rahulsharma/Desktop/React/webpage/src/visibility.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css'; \n\nconst Visibility = () => {\n  const [showLargeBox, setShowLargeBox] = useState(false);\n  const [showStatusBox, setShowStatusBox] = useState(false);\n  const [status, setStatus] = useState('');\n  const [employees, setEmployees] = useState([1, 2, 3]);\n  const [tasks, setTasks] = useState({\n    1: [{ name: 'Task 1', status: 'Not Started' }, { name: 'Task 2', status: 'Not Started' }, { name: 'Task 3', status: 'Not Started' }],\n    2: [{ name: 'Task 1', status: 'Not Started' }, { name: 'Task 2', status: 'Not Started' }, { name: 'Task 3', status: 'Not Started' }],\n    3: [{ name: 'Task 1', status: 'Not Started' }, { name: 'Task 2', status: 'Not Started' }, { name: 'Task 3', status: 'Not Started' }]\n  });\n  \n\n  const [showInputBox, setShowInputBox] = useState(null); // which employee is adding task\n  const [taskInput, setTaskInput] = useState('');         // task name input\n\n  const handleManagerClick = () => {\n    setShowLargeBox(prev => !prev);         \n    setStatus('Not Started');         \n  };\n\n  const [selectedTask, setSelectedTask] = useState(null); // { empId, taskIndex }\n  const handleTaskClick = (empId, taskIndex) => {\n    setSelectedTask({ empId, taskIndex });\n    setShowStatusBox(true);\n    setShowLargeBox(false);\n  };\n  \n\n  const addEmployee = () => {\n    const newId = employees.length + 1;\n    setEmployees(prev => [...prev, newId]); \n    setTasks(prev => ({ ...prev, [newId]: [] }));\n  };\n\n  const handleAddTask = (employeeId) => {\n    if (!taskInput.trim()) return;\n    setTasks(prev => ({\n      ...prev,\n      [employeeId]: [...prev[employeeId], taskInput.trim()]\n    }));\n    setTaskInput('');\n    setShowInputBox(null);\n  };\n  const deleteEmployee = (employeeId) => {\n    setEmployees(prev => prev.filter(emp => emp !== employeeId));\n    setTasks(prev => {\n      const newTasks = { ...prev };\n      delete newTasks[employeeId];\n      return newTasks;\n    });\n  };\n  \n  const deleteTask = (employeeId, taskIndex) => {\n    setTasks(prev => {\n      const updatedTasks = { ...prev };\n      updatedTasks[employeeId] = updatedTasks[employeeId].filter((_, index) => index !== taskIndex); // Remove the specific task\n      return updatedTasks;\n    });\n  };\n  \n\n  \n\n  return (\n    <div>\n      <div className=\"taskbox\">\n        <button onClick={handleManagerClick}>Manager</button>\n      </div>\n\n      <div className=\"taskbox2\">\n        <button id=\"editbtn\" onClick={addEmployee}>+</button>\n      </div>\n\n      <div className={showLargeBox ? '' : 'hidden'}>\n        <div className=\"largebox\">\n          {employees.map(emp => (\n            <div className=\"empbox\" key={emp}>\n              <h3>Employee {emp}</h3>\n              <ul>\n              {(tasks[emp] || []).map((task, index) => (\n                 <li>   \n                    <button onClick={handleTaskClick}>{task}</button>\n                    <button onClick={() => deleteTask(emp, index)}>-</button> \n                  </li>\n                ))}\n              </ul>\n\n              {showInputBox === emp ? (\n                <div>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter task name\"\n                    value={taskInput}\n                    onChange={(e) => setTaskInput(e.target.value)}\n                  />\n                  <button onClick={() => handleAddTask(emp)}>Add</button>\n                  <button onClick={() => setShowInputBox(null)}>Cancel</button>\n                </div>\n              ) : (\n                <div style={{ display: 'flex', gap: '8px' }}>\n                <button onClick={() => setShowInputBox(emp)}>Add New Task</button>\n                <button onClick={() => deleteEmployee(emp)}>🗑️</button>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className={showStatusBox ? '' : 'hidden'}>\n        <div className=\"statusbox\">\n        <ul>\n  {tasks[emp.id]?.map((task, index) => (\n    <li key={index}>\n      <button\n        onClick={() => handleTaskClick(emp.id, index)}\n        style={{\n          backgroundColor:\n            task.status === 'Not Started' ? '#828282' :\n            task.status === 'In Progress' ? 'orange' :\n            task.status === 'Testing' ? 'yellow' :\n            task.status === 'Done' ? 'lightgreen' : ''\n        }}\n      >\n        {task.name}\n      </button>\n    </li>\n  ))}\n</ul>\n\n          <p>Status: {status}</p>\n          <button onClick={() => {\n            setShowStatusBox(false);\n            setShowLargeBox(true);\n          }}>Close</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Visibility;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,aAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACrD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC;IACjC,CAAC,EAAE,CAAC;MAAEgB,IAAI,EAAE,QAAQ;MAAEN,MAAM,EAAE;IAAc,CAAC,EAAE;MAAEM,IAAI,EAAE,QAAQ;MAAEN,MAAM,EAAE;IAAc,CAAC,EAAE;MAAEM,IAAI,EAAE,QAAQ;MAAEN,MAAM,EAAE;IAAc,CAAC,CAAC;IACpI,CAAC,EAAE,CAAC;MAAEM,IAAI,EAAE,QAAQ;MAAEN,MAAM,EAAE;IAAc,CAAC,EAAE;MAAEM,IAAI,EAAE,QAAQ;MAAEN,MAAM,EAAE;IAAc,CAAC,EAAE;MAAEM,IAAI,EAAE,QAAQ;MAAEN,MAAM,EAAE;IAAc,CAAC,CAAC;IACpI,CAAC,EAAE,CAAC;MAAEM,IAAI,EAAE,QAAQ;MAAEN,MAAM,EAAE;IAAc,CAAC,EAAE;MAAEM,IAAI,EAAE,QAAQ;MAAEN,MAAM,EAAE;IAAc,CAAC,EAAE;MAAEM,IAAI,EAAE,QAAQ;MAAEN,MAAM,EAAE;IAAc,CAAC;EACrI,CAAC,CAAC;EAGF,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxD,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAS;;EAExD,MAAMqB,kBAAkB,GAAGA,CAAA,KAAM;IAC/Bd,eAAe,CAACe,IAAI,IAAI,CAACA,IAAI,CAAC;IAC9BX,SAAS,CAAC,aAAa,CAAC;EAC1B,CAAC;EAED,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxD,MAAMyB,eAAe,GAAGA,CAACC,KAAK,EAAEC,SAAS,KAAK;IAC5CH,eAAe,CAAC;MAAEE,KAAK;MAAEC;IAAU,CAAC,CAAC;IACrClB,gBAAgB,CAAC,IAAI,CAAC;IACtBF,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAGD,MAAMqB,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,KAAK,GAAGjB,SAAS,CAACkB,MAAM,GAAG,CAAC;IAClCjB,YAAY,CAACS,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEO,KAAK,CAAC,CAAC;IACtCd,QAAQ,CAACO,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACO,KAAK,GAAG;IAAG,CAAC,CAAC,CAAC;EAC9C,CAAC;EAED,MAAME,aAAa,GAAIC,UAAU,IAAK;IACpC,IAAI,CAACb,SAAS,CAACc,IAAI,CAAC,CAAC,EAAE;IACvBlB,QAAQ,CAACO,IAAI,KAAK;MAChB,GAAGA,IAAI;MACP,CAACU,UAAU,GAAG,CAAC,GAAGV,IAAI,CAACU,UAAU,CAAC,EAAEb,SAAS,CAACc,IAAI,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IACHb,YAAY,CAAC,EAAE,CAAC;IAChBF,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EACD,MAAMgB,cAAc,GAAIF,UAAU,IAAK;IACrCnB,YAAY,CAACS,IAAI,IAAIA,IAAI,CAACa,MAAM,CAACC,GAAG,IAAIA,GAAG,KAAKJ,UAAU,CAAC,CAAC;IAC5DjB,QAAQ,CAACO,IAAI,IAAI;MACf,MAAMe,QAAQ,GAAG;QAAE,GAAGf;MAAK,CAAC;MAC5B,OAAOe,QAAQ,CAACL,UAAU,CAAC;MAC3B,OAAOK,QAAQ;IACjB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,UAAU,GAAGA,CAACN,UAAU,EAAEL,SAAS,KAAK;IAC5CZ,QAAQ,CAACO,IAAI,IAAI;MACf,MAAMiB,YAAY,GAAG;QAAE,GAAGjB;MAAK,CAAC;MAChCiB,YAAY,CAACP,UAAU,CAAC,GAAGO,YAAY,CAACP,UAAU,CAAC,CAACG,MAAM,CAAC,CAACK,CAAC,EAAEC,KAAK,KAAKA,KAAK,KAAKd,SAAS,CAAC,CAAC,CAAC;MAC/F,OAAOY,YAAY;IACrB,CAAC,CAAC;EACJ,CAAC;EAKD,oBACErC,OAAA;IAAAwC,QAAA,gBACExC,OAAA;MAAKyC,SAAS,EAAC,SAAS;MAAAD,QAAA,eACtBxC,OAAA;QAAQ0C,OAAO,EAAEvB,kBAAmB;QAAAqB,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eAEN9C,OAAA;MAAKyC,SAAS,EAAC,UAAU;MAAAD,QAAA,eACvBxC,OAAA;QAAQ+C,EAAE,EAAC,SAAS;QAACL,OAAO,EAAEhB,WAAY;QAAAc,QAAA,EAAC;MAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eAEN9C,OAAA;MAAKyC,SAAS,EAAErC,YAAY,GAAG,EAAE,GAAG,QAAS;MAAAoC,QAAA,eAC3CxC,OAAA;QAAKyC,SAAS,EAAC,UAAU;QAAAD,QAAA,EACtB9B,SAAS,CAACsC,GAAG,CAACd,GAAG,iBAChBlC,OAAA;UAAKyC,SAAS,EAAC,QAAQ;UAAAD,QAAA,gBACrBxC,OAAA;YAAAwC,QAAA,GAAI,WAAS,EAACN,GAAG;UAAA;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvB9C,OAAA;YAAAwC,QAAA,EACC,CAAC5B,KAAK,CAACsB,GAAG,CAAC,IAAI,EAAE,EAAEc,GAAG,CAAC,CAACC,IAAI,EAAEV,KAAK,kBACjCvC,OAAA;cAAAwC,QAAA,gBACGxC,OAAA;gBAAQ0C,OAAO,EAAEnB,eAAgB;gBAAAiB,QAAA,EAAES;cAAI;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC,eACjD9C,OAAA;gBAAQ0C,OAAO,EAAEA,CAAA,KAAMN,UAAU,CAACF,GAAG,EAAEK,KAAK,CAAE;gBAAAC,QAAA,EAAC;cAAC;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvD,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,EAEJ/B,YAAY,KAAKmB,GAAG,gBACnBlC,OAAA;YAAAwC,QAAA,gBACExC,OAAA;cACEkD,IAAI,EAAC,MAAM;cACXC,WAAW,EAAC,iBAAiB;cAC7BC,KAAK,EAAEnC,SAAU;cACjBoC,QAAQ,EAAGC,CAAC,IAAKpC,YAAY,CAACoC,CAAC,CAACC,MAAM,CAACH,KAAK;YAAE;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/C,CAAC,eACF9C,OAAA;cAAQ0C,OAAO,EAAEA,CAAA,KAAMb,aAAa,CAACK,GAAG,CAAE;cAAAM,QAAA,EAAC;YAAG;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACvD9C,OAAA;cAAQ0C,OAAO,EAAEA,CAAA,KAAM1B,eAAe,CAAC,IAAI,CAAE;cAAAwB,QAAA,EAAC;YAAM;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1D,CAAC,gBAEN9C,OAAA;YAAKwD,KAAK,EAAE;cAAEC,OAAO,EAAE,MAAM;cAAEC,GAAG,EAAE;YAAM,CAAE;YAAAlB,QAAA,gBAC5CxC,OAAA;cAAQ0C,OAAO,EAAEA,CAAA,KAAM1B,eAAe,CAACkB,GAAG,CAAE;cAAAM,QAAA,EAAC;YAAY;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAClE9C,OAAA;cAAQ0C,OAAO,EAAEA,CAAA,KAAMV,cAAc,CAACE,GAAG,CAAE;cAAAM,QAAA,EAAC;YAAG;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnD,CACN;QAAA,GA3B0BZ,GAAG;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA4B3B,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN9C,OAAA;MAAKyC,SAAS,EAAEnC,aAAa,GAAG,EAAE,GAAG,QAAS;MAAAkC,QAAA,eAC5CxC,OAAA;QAAKyC,SAAS,EAAC,WAAW;QAAAD,QAAA,gBAC1BxC,OAAA;UAAAwC,QAAA,GAAArC,aAAA,GACLS,KAAK,CAACsB,GAAG,CAACa,EAAE,CAAC,cAAA5C,aAAA,uBAAbA,aAAA,CAAe6C,GAAG,CAAC,CAACC,IAAI,EAAEV,KAAK,kBAC9BvC,OAAA;YAAAwC,QAAA,eACExC,OAAA;cACE0C,OAAO,EAAEA,CAAA,KAAMnB,eAAe,CAACW,GAAG,CAACa,EAAE,EAAER,KAAK,CAAE;cAC9CiB,KAAK,EAAE;gBACLG,eAAe,EACbV,IAAI,CAACzC,MAAM,KAAK,aAAa,GAAG,SAAS,GACzCyC,IAAI,CAACzC,MAAM,KAAK,aAAa,GAAG,QAAQ,GACxCyC,IAAI,CAACzC,MAAM,KAAK,SAAS,GAAG,QAAQ,GACpCyC,IAAI,CAACzC,MAAM,KAAK,MAAM,GAAG,YAAY,GAAG;cAC5C,CAAE;cAAAgC,QAAA,EAEDS,IAAI,CAACnC;YAAI;cAAA6B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ;UAAC,GAZFP,KAAK;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAaV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eAEK9C,OAAA;UAAAwC,QAAA,GAAG,UAAQ,EAAChC,MAAM;QAAA;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvB9C,OAAA;UAAQ0C,OAAO,EAAEA,CAAA,KAAM;YACrBnC,gBAAgB,CAAC,KAAK,CAAC;YACvBF,eAAe,CAAC,IAAI,CAAC;UACvB,CAAE;UAAAmC,QAAA,EAAC;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5C,EAAA,CA3IID,UAAU;AAAA2D,EAAA,GAAV3D,UAAU;AA6IhB,eAAeA,UAAU;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}